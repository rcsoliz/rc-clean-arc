@page "/login"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JS


@using System.ComponentModel.DataAnnotations
@using System.Net.Http.Headers
@using BlazorAppRc.Models

<h3>Iniciar sesión</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Email</label>
        <InputText class="form-control" @bind-Value="loginModel.Email" />
        <ValidationMessage For="@(() => loginModel.Email)" />
    </div>

    <div class="mb-3">
        <label class="form-label">Contraseña</label>
        <InputText class="form-control" type="password" @bind-Value="loginModel.Password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>

    <button type="submit" class="btn btn-primary me-2">Ingresar</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
</EditForm>

@code {
    private LoginModel loginModel = new();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/authentication/login", loginModel);
            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<TokenResponse>();
                if (result is not null && !string.IsNullOrEmpty(result.Token))
                {
                    await JS.InvokeVoidAsync("localStorage.setItem", "jwt", result.Token);
                    Navigation.NavigateTo("/", true);
                }
                else
                {
                    errorMessage = "Token inválido.";
                }
            }
            else
            {
                errorMessage = "Credenciales incorrectas.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error de red: {ex.Message}";
        }
    }

    private void Cancelar()
    {
        Navigation.NavigateTo("/");
    }


}
